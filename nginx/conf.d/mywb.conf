
upstream game_service {
    server game:8000;
}

upstream match_making_service {
    server match_making:8000;
}

upstream tournament_service {
    server tournament:8000;
}

upstream chat_service {
    server chat:8000;
}
#  http://localhost:8050/tournament/

server {
    listen 80;

    root /var/www/html;
    server_name abouassi.42.fr;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

   

    location ~ ^/(tournament/trn_subscribe|tournament/is_inTourn|tournament/tourn_info|tournament/leave_trn|tournament/trn_history)/ {
        # rewrite ^/tournament/(.*)$ /tournament/$1 break;
        proxy_pass http://tournament_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ ^/(chat|chat/send_msg)/{
        proxy_pass http://chat_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /ws/chat/ {
        # rewrite ^/ws/game(/online.*)$ /ws$1 break;
        proxy_pass http://chat_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api/ {
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/game/ {
        rewrite ^/api/game/(.*)$ /api/$1 break;
        proxy_pass http://game_service;  # Or whatever upstream you are using
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /ws/ {
        proxy_pass http://django:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;  # Optional, for better performance with WebSocket
    }

    location /ws/queue/
    {
        proxy_pass http://match_making_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /ws/game/ {
        rewrite ^/ws/game(/online.*)$ /ws$1 break;
        proxy_pass http://game_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location ~ ^/(ws/tourn|ws/tourn_info)/ {
        # rewrite ^/ws/game(/online.*)$ /ws$1 break;
        proxy_pass http://tournament_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }


    location /media/ {
        alias /var/www/html/media;  # Update this path to your actual media root
    }
    
      # Serve .js.map files with the correct MIME type and enable gzip compression
    # location ~* \.js\.map$ {
    #     types {
    #         application/json map;
    #     }
    #     gzip_static on;
    #     expires 1y;
    #     add_header Cache-Control "public";
    # }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2|webp|avif)$ {
        root /var/www/html;
        add_header Access-Control-Allow-Origin *;
        try_files $uri = /media/default.jpg;
        access_log off;
        log_not_found off;
    }

    location ~* \.js$ {
        add_header Content-Type application/javascript;
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
    }

    location ~* \.ttf$ {
        add_header Content-Type font/ttf;
    }

    location ~* \.woff$ {
        add_header Content-Type font/woff;
    }

    location ~* \.woff2$ {
        add_header Content-Type font/woff2;
    }

    # Proxy pass for API endpoints
    # location /api/ {
    #     proxy_pass http://django:8000;  # Change this to your Django application server
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     add_header Access-Control-Allow-Origin *;
    #     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
    #     add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    #     add_header Access-Control-Allow-Credentials true;

    #     # Handle preflight requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin '*';
    #         add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
    #         add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    #         add_header Content-Length 0;
    #         add_header Content-Type text/plain;
    #         return 204;
    #     }
    # }
}
